<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itycu.server.dao.BudgetDataDao">


    <sql id="budgetData">
      budget.`id` ,
      budget.`budget_data_id` as budgetDataId,
      budget.`userId`,
      budget.`apply_dept_id` as applyDeptId ,
      budget.`apply_dept_name` as applyDeptName ,
      budget.`gl_dept_id` as glDeptId ,
      budget.`gl_dept_name` as glDeptName ,
      budget.`apply_time` as applyTime ,
      budget.`flowid`,
      budget.`stepid`,
      budget.`status` ,
      budget.`budget_kind` as budgetKind,
      budget.`del` ,
      budget.`create_time` as createTime ,
      budget.`update_time` as updateTime ,
      budget.`filename` ,
      budget.`fileurl` ,
      budget.`opinion` ,
      budget.`mark` ,
      budget.`data_c01` as dataC01 ,
      budget.`data_c02` as dataC02,
      budget.`data_c03`
    </sql>


    <sql id="budgetDataItem">
      item. `id` ,
      item.`budget_data_id` as budgetDataId ,
      item.`budget_period` as budgetPeriod ,
      item.`budget_type` as budgetType ,
      item.`budget_kind` as budgetKind ,
      item.`budget_num` as budgetNum ,
      item.`budget_price` as budgetPrice ,
      item.`property` ,
      item.`budget_unit` as budgetUnit ,
      item.`budget_money` as budgetMoney ,
      item.`gl_dept_id` as glDeptId ,
      item.`gl_dept_name` as glDeptName,
      item.`brand` ,
      item.`model` ,
      item.`file_url` fileUrl,
      item.`remark` ,
      item.`create_time`  createTime,
      item.`update_time` updateTime,
      item.`budget_status`  budgetStatus,
      item.`apply_dept_id`  applyDeptId,
      item.`apply_dept_name` applyDeptName,
      item.`budget_c01` budgetC01,
      item.`budget_c02` budgetC02,
      item.`budget_c03` budgetC03
    </sql>


    <sql id="where">
        <where>
            <if test="params.id != null and params.id != ''">
                and t.id = #{params.id}
            </if>
            <if test="params.budgetBuyNum != null and params.budgetBuyNum != ''">
                and t.budgetBuyNum = #{params.budgetBuyNum}
            </if>
            <if test="params.userId != null and params.userId != ''">
                and t.userId = #{params.userId}
            </if>
            <if test="params.applyDeptId != null and params.applyDeptId != ''">
                and t.applyDeptId = #{params.applyDeptId}
            </if>
            <if test="params.applyTime != null and params.applyTime != ''">
                and t.applyTime = #{params.applyTime}
            </if>
            <if test="params.flowid != null and params.flowid != ''">
                and t.flowid = #{params.flowid}
            </if>
            <if test="params.stepid != null and params.stepid != ''">
                and t.stepid = #{params.stepid}
            </if>
            <if test="params.status != null and params.status != ''">
                and t.status = #{params.status}
            </if>
            <if test="params.type != null and params.type != ''">
                and t.type = #{params.type}
            </if>
            <if test="params.del != null and params.del != ''">
                and t.del = #{params.del}
            </if>
            <if test="params.createTime != null and params.createTime != ''">
                and t.createTime = #{params.createTime}
            </if>
            <if test="params.updateTime != null and params.updateTime != ''">
                and t.updateTime = #{params.updateTime}
            </if>

        </where>
    </sql>

    <insert id="saveBudgetDataInfo" parameterType="com.itycu.server.model.BudgetData" useGeneratedKeys="true"
            keyProperty="id">
			INSERT INTO `budget_data` (
			`budget_data_id`,
			`userId`,
			`apply_dept_id`,
			`apply_dept_name`,
			`apply_time`,
			`flowid`,
			`stepid`,
			`status`,
			`budget_kind`,
			`del`,
		     filename,
		     fileurl,
		     gl_dept_id,
		     gl_dept_name,
			`create_time`,
			`update_time` )
			VALUES
			(
			#{budgetDataId},
			#{userId},
			#{applyDeptId},
			#{applyDeptName},
			now(),
			#{flowid},
			#{stepid},
			#{status},
			#{budgetKind},
			0,
			#{fileName},
			#{fileUrl},
			#{glDeptId},
			#{glDeptName},
			now(),
			now());
	</insert>


    <insert id="saveBudgetDataItemInfo" parameterType="list">
        INSERT INTO
        `budget_data_item` (
        `budget_data_id`,
        `budget_period`,
        `budget_type`,
        `budget_kind`,
        `budget_num`,
        `budget_price`,
        `property`,
        `budget_unit`,
        `budget_money`,
        `gl_dept_id`,
        `gl_dept_name`,
        `brand`,
        `model`,
        `file_url`,
        `remark`,
        `create_time`,
        `update_time`,
        `budget_status`,
        `apply_dept_id`,
        `apply_dept_name`,
        `budget_c01`,
        `budget_c02`,
        `budget_c03`
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.budgetDataId},
            #{item.budgetPeriod},
            #{item.budgetType},
            #{item.budgetKind},
            #{item.budgetNum},
            #{item.budgetPrice},
            #{item.property},
            #{item.budgetUnit},
            #{item.budgetMoney},
            #{item.glDeptId},
            #{item.glDeptName},
            #{item.brand},
            #{item.model},
            #{item.fileUrl},
            #{item.remark},
            now(),
            now(),
            0,
            #{item.applyDeptId},
            #{item.applyDeptName},
            #{item.budgetC01},
            #{item.budgetC02},
            #{item.budgetC03}
            )
        </foreach>
    </insert>


    <select id="countBudgetRecord" resultType="java.lang.Integer">
        select count(*) from budget_data
        <include refid="where"/>
    </select>


    <select id="queryBudgetRecordList" parameterType="map" resultType="java.util.Map">
        select
        <include refid="budgetData"/>
        from budget_data as budget
        <include refid="where"/>
        order by create_time desc
        limit #{offset}, #{limit}
    </select>


    <select id="budgetItemRecordListById" parameterType="map" resultType="java.util.Map">
        SELECT
        concat (dict.k," ",dict.val) as typeName,
        <include refid="budgetDataItem"/>
        FROM
        budget_data
        AS d LEFT JOIN budget_data_item AS item ON d.budget_data_id = item.budget_data_id
        left join t_dict as dict on dict.k = item.budget_type
        WHERE
        d.id = #{params.id} and dict.type = "budgetType"
        ORDER BY
        item.create_time DESC
        limit #{offset}, #{limit}
    </select>


    <select id="getBudgetItemDetailListByTodoId" resultType="java.util.Map">

        select
        concat (dict.k," ",dict.val) as typeName,
        a.status as checkStatus,
        <include refid="budgetDataItem"/>
        from flow_todo as a left join budget_data as b on a.bizid = b.id
        left join budget_data_item as item on b.budget_data_id = item.budget_data_id
        left join t_dict as dict on dict.k = item.budget_type
        where a.id = #{params.id} and a.biztype = 20 and dict.type = "budgetType"
        limit #{offset}, #{limit}

    </select>


    <select id="getTodoInitData" resultType="com.itycu.server.model.BudgetData">
        SELECT
        c.nickname as nickname,
        <include refid="budgetData"/>
        FROM
        `flow_todo` AS a
        LEFT JOIN budget_data AS budget ON a.bizid = budget.id
        left join sys_user as c on budget.userId = c.id
        WHERE
        a.id = #{params.id}
    </select>


    <update id="updateBudgetStatus">
        UPDATE `budget_data`
        SET
        `status` = #{params.status}
        WHERE
         `id` = #{params.id}
    </update>


    <select id="getTodoCheckList" resultType="map">
         SELECT
        a.`id`,
        a.`type`,
        a.`auditby`,
        a.`sendby`,
        a.`createTime`,
        a.`updateTime`,
        a.`biaoti`,
        a.`neirong`,
        a.`biztype`,
        a.`bizid`,
        a.`biztable`,
        a.`bizcreateby`,
        a.`bizdeptid`,
        a.`status`,
        a.`memo`,
        a.`c01`,
        a.`c02`,
        a.`c03`,
        a.`flowid`,
        a.`stepid`,
        a.`url`,
        a.`todoIds`,
        b.nickname AS creator
    FROM
        flow_todo AS a
        LEFT JOIN sys_user AS b on   a.sendby = b.id
    where bizid = #{params.bizid}
       and flowid = #{params.flowid}
    </select>


    <update id="updateBudegetItemCheckStatus">
        update budget_data_item
        <trim prefix="set" suffixOverrides=",">
            <if test="glStatus!=null">
                budget_c01 = #{glStatus},
            </if>
            <if test="cWStatus!=null">
                budget_c02  = #{cWStatus} ,
            </if>
        </trim>
        where budget_data_id = (select budget_data_id from budget_data where id = #{bizid})
    </update>


    <select id="queryBudgetDataById" resultType="com.itycu.server.model.BudgetData">
        SEELCT <include refid="budgetData"/> as budget
        where budget.id  =  #{id}
    </select>



    <select id="queryGldeptManagerDeptById" resultType="java.lang.String">
        select id from sys_user as a where c03 = #{cwb}
    </select>

</mapper>
